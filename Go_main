from Go_settings import* ###initialisation###
var=settings()
print('Taille du goban?')
N=int(input())
var.N=N #taille du goban
print(' ')
print('Noir ou Blanc?') #se quel côté le joueur humain joue-t-il?
humain=input()
while humain not in ('Noir','noir','Noirs','noirs','Blanc','blanc','Blancs','blancs') :
    print('Joueur non reconnu.')
    humain=input()
if humain in ('Noir','noir','Noirs','noirs') :
    humain=1
elif humain in ('Blanc','blanc','Blancs','blancs') :
    humain=2
IA=3-humain
print(' ')
print('Nombre de simulations par coup pour l IA?') #on définit le nombre de simulationspar coup pour l'IA
n_sim=int(input())
print(' ')
print('Handicap?') #si on veut ajouter un handicap
handicap=int(input())
c_handicap=0
while var.Cases!=[] and c_handicap<handicap-1 : ###phase d'handicap###
    if humain==1 :
        coup_humain(var,humain)
    else :
        coup=coup_IA_v1(var,IA,n_sim,0)
        print('IA : '+str(coup[0]))
    c_handicap=c_handicap+1
while var.Cases!=[] : ###déroulement de la partie###
    if humain==1 : #si le joueur humain joue Noir
        coup_1=coup_humain(var,humain) #coup du joueur
        points_sup=coup_1[1]
        while points_sup!=[] : #on lui ajoute ses points si il en a gagné
            points=points_sup[0]
            var.Points[0]=var.Points[0]+points
            print('Noir gagne '+str(points)+' points. '+str(var.Points[0])+' - '+str(var.Points[1]))
            points_sup.remove(points)
        if len(var.Cases)>=1 : #s'il reste une case vide pour l'IA
            coup_2=coup_IA_v1(var,IA,n_sim,0) #coup de l'IA
            print('IA : '+str(coup_2[0]))
            points_sup=coup_2[1]
            while points_sup!=[] : #on lui ajoute ses points
                points=points_sup[0]
                var.Points[1]=var.Points[1]+points
                print('Blanc gagne '+str(points)+' points. '+str(var.Points[0])+' - '+str(var.Points[1]))
                points_sup.remove(points)
    else : #si le joueur humain joue Blanc
        coup_1=coup_IA_v1(var,IA,n_sim,0) #coup de l'IA
        print('IA : '+str(coup_1[0]))
        points_sup=coup_1[1]
        while points_sup!=[] : #on lui ajoute ses points
            points=points_sup[0]
            var.Points[0]=var.Points[0]+points
            print('Noir gagne '+str(points)+' points. '+str(var.Points[0])+' - '+str(var.Points[1]))
            points_sup.remove(points)
        if len(Cases)>=1 : #s'il reste une case vide sur le joueur
            coup_2=coup_humain(var,humain) #coup du joueur
            points_sup=coup_2[1]
            while points_sup!=[] : #on lui ajoute ses points
                points=points_sup[0]
                var.Points[1]=var.Points[1]+points
                print('Blanc gagne '+str(points)+' points. '+str(var.Points[0])+' - '+str(var.Points[1]))
                points_sup.remove(points)
if var.Points[0]>var.Points[1] : ###comptage des fois et gagnant###
    print('Noir gagne. '+str(var.Points[0])+' - '+str(var.Points[1]))
elif var.Points[1]>var.Points[0] :
    print('Blanc gagne. '+str(var.Points[0])+' - '+str(var.Points[1]))
else :
    print('Egalité') #en pratique ce cas n'arrive pas à cause du komi qui n'est volontairement pas entier
